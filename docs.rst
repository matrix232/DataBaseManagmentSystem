Программный интрефейс
=====================

Глобальные обьекты
------------------

* Структура table - обьект представляющий основной вид таблицы, имеет такие поля:
    *name* - имя таблицы.
    *rows* - список строк таблицы, хранит списки данных.
    *columns* - список колонок таблицы, хранит в точечные пары **(column-name . column-type)**

* ``*database*`` - хэш-таблица, отвечающая за хранение созданных *table*. Хранит таблицы по ключ-значение **(table-name : table)**

Функции пользователя СУБД
-------------------------

*create-table* - функция, которая создает таблицу. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    * **name** - имя таблицы.
    * **columns** - список пар названия колонки и типа колонки.

    Пример создания таблицы:

:: 
    
(create-table 'users '((id integer primary key) (username string) (password string) (email string))))


*insert-into* - функция, для вставки данных в таблицу.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    * **table-name** - имя таблицы.
    * **row-data** - список точечных пар, которая хранит в себе имя колонки для вставки и данные. 

::

(insert-into 'users '((id . 1) (username . "admin") (password . "passADM") (email . "adm@mail.ru")))

*select-from* - функция для чтения данных из таблицы. Возвращает список точечных пар (колонка . данные).
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    * **table-name** - имя таблицы.
    * **columns** - колонки для чтения из таблицы.

::

(select-from "users" "username" "email"))

*delete-from* - функция для удаления данных из таблицы.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    * **table-name** - имя таблицы.
    * **cond-pair** - список ассоциативных списков вида (column-name . value).

::

(delete-from "users" '(("id" . 1)))

*drop-table* - функция для удаления таблицы.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    * **table-name** - имя таблицы.

::

(drop-table "users")


Внутренее устройство модуля
---------------------------

*table-exist* - функция, которая проверяет создалась ли таблица.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Параметры:
    **name** - имя таблицы.